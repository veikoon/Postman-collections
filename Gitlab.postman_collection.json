{
	"info": {
		"_postman_id": "cc491087-45e6-46ba-aa93-9f2f2cc44068",
		"name": "Gitlab",
		"description": "The platform for modern developers. GitLab unifies issues, code review, CI and CD into a single experience.\n\nContact Support:\n Name: No Contact\n Email: email@example.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "13007550",
		"_collection_link": "https://www.postman.com/api-evangelist/ci-cd/collection/rtg12lk/gitlab?action=share&source=collection_link&creator=13007550"
	},
	"item": [
		{
			"name": "dockerfiles",
			"item": [
				{
					"name": "Get Dockerfiles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dockerfiles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dockerfiles"
							]
						},
						"description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				},
				{
					"name": "Get Dockerfiles Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/dockerfiles/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"dockerfiles",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "<get>",
									"type": "string",
									"description": "The name of the template"
								}
							]
						},
						"description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				}
			]
		},
		{
			"name": "gitignores",
			"item": [
				{
					"name": "Get Gitignores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gitignores",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gitignores"
							]
						},
						"description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				},
				{
					"name": "Get Gitignores Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gitignores/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gitignores",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "<get>",
									"type": "string",
									"description": "The name of the template"
								}
							]
						},
						"description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				}
			]
		},
		{
			"name": "gitlab ci ymls",
			"item": [
				{
					"name": "Get Gitlab Ci Ymls",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gitlab_ci_ymls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gitlab_ci_ymls"
							]
						},
						"description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				},
				{
					"name": "Get Gitlab Ci Ymls Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/gitlab_ci_ymls/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"gitlab_ci_ymls",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "<get>",
									"type": "string",
									"description": "The name of the template"
								}
							]
						},
						"description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				}
			]
		},
		{
			"name": "groups",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "access requests",
							"item": [
								{
									"name": "{user id}",
									"item": [
										{
											"name": "Delete Groups  Access Requests User",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:id/access_requests/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":id",
														"access_requests",
														":user_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "user_id",
															"value": "<>",
															"type": "string",
															"description": "The user ID of the access requester"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": []
										},
										{
											"name": "Put Groups  Access Requests User  Approve",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/groups/:id/access_requests/:user_id/approve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"groups",
														":id",
														"access_requests",
														":user_id",
														"approve"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "user_id",
															"value": "<>",
															"type": "string",
															"description": "The user ID of the access requester"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Groups  Access Requests",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/:id/access_requests?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":id",
												"access_requests"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.11."
									},
									"response": []
								}
							]
						},
						{
							"name": "members",
							"item": [
								{
									"name": "Get Groups  Members",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/:id/members?query=<>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":id",
												"members"
											],
											"query": [
												{
													"key": "query",
													"value": "<>",
													"description": "A query string to search for members"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Gets a list of group or project members viewable by the authenticated user."
									},
									"response": []
								},
								{
									"name": "Delete Groups  Members User",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/:id/members/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":id",
												"members",
												":user_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "user_id",
													"value": "<>",
													"type": "string",
													"description": "The user ID of the access requester"
												}
											]
										},
										"description": "Removes a user from a group or project."
									},
									"response": []
								}
							]
						},
						{
							"name": "projects",
							"item": [
								{
									"name": "Get Groups  Projects",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/:id/projects?archived=<get>&visibility=<>&search=<>&order_by=<>&sort=<>&simple=<>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":id",
												"projects"
											],
											"query": [
												{
													"key": "archived",
													"value": "<get>",
													"description": "Limit by archived status"
												},
												{
													"key": "visibility",
													"value": "<>",
													"description": "Limit by visibility"
												},
												{
													"key": "search",
													"value": "<>",
													"description": "Search for a specific group"
												},
												{
													"key": "order_by",
													"value": "<>",
													"description": "Order by name or path"
												},
												{
													"key": "sort",
													"value": "<>",
													"description": "Sort by asc (ascending) or desc (descending)"
												},
												{
													"key": "simple",
													"value": "<>",
													"description": "Return only the ID, URL, name, and path of each project"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get a list of projects in this group."
									},
									"response": []
								},
								{
									"name": "Add Groups  Projects Project",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/groups/:id/projects/:project_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"groups",
												":id",
												"projects",
												":project_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "project_id",
													"value": "<get>",
													"type": "string",
													"description": "The ID or path of the project"
												}
											]
										},
										"description": "Transfer a project to the group namespace. Available only for admin."
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Groups",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Remove a group."
							},
							"response": []
						},
						{
							"name": "Get Groups  Issues",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/issues?state=<get>&labels=<get>&milestone=<object>&order_by=<>&sort=<>&page=<>&per_page=<>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"issues"
									],
									"query": [
										{
											"key": "state",
											"value": "<get>",
											"description": "Return opened, closed, or all issues"
										},
										{
											"key": "labels",
											"value": "<get>",
											"description": "Comma-separated list of label names"
										},
										{
											"key": "milestone",
											"value": "<object>",
											"description": "Return issues for a specific milestone"
										},
										{
											"key": "order_by",
											"value": "<>",
											"description": "Order by name or path"
										},
										{
											"key": "sort",
											"value": "<>",
											"description": "Sort by asc (ascending) or desc (descending)"
										},
										{
											"key": "page",
											"value": "<>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<>",
											"description": "Number of items per page"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Get a list of group issues"
							},
							"response": []
						},
						{
							"name": "Get Groups  Notification Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/groups/:id/notification_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"groups",
										":id",
										"notification_settings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.12"
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Groups",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups?statistics=<get>&all_available=<>&search=<>&order_by=<>&sort=<>&page=<>&per_page=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups"
							],
							"query": [
								{
									"key": "statistics",
									"value": "<get>",
									"description": "Include project statistics"
								},
								{
									"key": "all_available",
									"value": "<>",
									"description": "Show all group that you have access to"
								},
								{
									"key": "search",
									"value": "<>",
									"description": "Search for a specific group"
								},
								{
									"key": "order_by",
									"value": "<>",
									"description": "Order by name or path"
								},
								{
									"key": "sort",
									"value": "<>",
									"description": "Sort by asc (ascending) or desc (descending)"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "Get a groups list"
					},
					"response": []
				},
				{
					"name": "Get Groups Owned",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/groups/owned?page=<>&per_page=<>&statistics=<get>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"groups",
								"owned"
							],
							"query": [
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								},
								{
									"key": "statistics",
									"value": "<get>",
									"description": "Include project statistics"
								}
							]
						},
						"description": "Get list of owned groups for authenticated user"
					},
					"response": []
				}
			]
		},
		{
			"name": "hooks",
			"item": [
				{
					"name": "Get Hooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hooks",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hooks"
							]
						},
						"description": "Get the list of system hooks"
					},
					"response": []
				},
				{
					"name": "Delete Hooks",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/hooks/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"hooks",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<get>",
									"type": "string",
									"description": "The ID of a group"
								}
							]
						},
						"description": "Delete a hook"
					},
					"response": []
				}
			]
		},
		{
			"name": "internal",
			"item": [
				{
					"name": "Add Internal Allowed",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/internal/allowed",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"internal",
								"allowed"
							]
						},
						"description": "Post internal allowed"
					},
					"response": []
				},
				{
					"name": "Get Internal Broadcast Message",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/internal/broadcast_message",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"internal",
								"broadcast_message"
							]
						},
						"description": "Get internal broadcast message"
					},
					"response": []
				},
				{
					"name": "Get Internal Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/internal/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"internal",
								"check"
							]
						},
						"description": "Get internal check"
					},
					"response": []
				},
				{
					"name": "Get Internal Discover",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/internal/discover",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"internal",
								"discover"
							]
						},
						"description": "Get internal discover"
					},
					"response": []
				},
				{
					"name": "Add Internal Lfs Authenticate",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/internal/lfs_authenticate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"internal",
								"lfs_authenticate"
							]
						},
						"description": "Post internal lfs authenticate"
					},
					"response": []
				},
				{
					"name": "Get Internal Merge Request Urls",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/internal/merge_request_urls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"internal",
								"merge_request_urls"
							]
						},
						"description": "Get internal merge request urls"
					},
					"response": []
				},
				{
					"name": "Add Internal Two Factor Recovery Codes",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/internal/two_factor_recovery_codes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"internal",
								"two_factor_recovery_codes"
							]
						},
						"description": "Post internal two factor recovery codes"
					},
					"response": []
				}
			]
		},
		{
			"name": "licenses",
			"item": [
				{
					"name": "Get Licenses",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/licenses?popular=<get>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licenses"
							],
							"query": [
								{
									"key": "popular",
									"value": "<get>",
									"description": "If passed, returns only popular licenses"
								}
							]
						},
						"description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				},
				{
					"name": "Get Licenses Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/licenses/:name",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"licenses",
								":name"
							],
							"variable": [
								{
									"key": "name",
									"value": "<get>",
									"type": "string",
									"description": "The name of the template"
								}
							]
						},
						"description": "This feature was introduced in GitLab 8.7. This endpoint is deprecated and will be removed in GitLab 9.0."
					},
					"response": []
				}
			]
		},
		{
			"name": "projects",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "access requests",
							"item": [
								{
									"name": "{user id}",
									"item": [
										{
											"name": "Delete Projects  Access Requests User",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/access_requests/:user_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"access_requests",
														":user_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "user_id",
															"value": "<>",
															"type": "string",
															"description": "The user ID of the access requester"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": []
										},
										{
											"name": "Put Projects  Access Requests User  Approve",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/access_requests/:user_id/approve",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"access_requests",
														":user_id",
														"approve"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "user_id",
															"value": "<>",
															"type": "string",
															"description": "The user ID of the access requester"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Access Requests",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/access_requests?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"access_requests"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.11."
									},
									"response": []
								}
							]
						},
						{
							"name": "boards",
							"item": [
								{
									"name": "{board id}/lists",
									"item": [
										{
											"name": "Get Projects  Boards Board  Lists",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/boards/:board_id/lists",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"boards",
														":board_id",
														"lists"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "board_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a board"
														}
													]
												},
												"description": "Does not include `backlog` and `done` lists. This feature was introduced in 8.13"
											},
											"response": []
										},
										{
											"name": "Delete Projects  Boards Board  Lists List",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/boards/:board_id/lists/:list_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"boards",
														":board_id",
														"lists",
														":list_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "board_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a board"
														},
														{
															"key": "list_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a board list"
														}
													]
												},
												"description": "Delete projects  boards board  lists list"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Boards",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/boards",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"boards"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "This feature was introduced in 8.13"
									},
									"response": []
								}
							]
						},
						{
							"name": "builds",
							"item": [
								{
									"name": "{build id}",
									"item": [
										{
											"name": "artifacts",
											"item": [
												{
													"name": "Get Projects  Builds Build  Artifacts",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/builds/:build_id/artifacts",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"builds",
																":build_id",
																"artifacts"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "build_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a build"
																}
															]
														},
														"description": "This feature was introduced in GitLab 8.5"
													},
													"response": []
												},
												{
													"name": "Add Projects  Builds Build  Artifacts Keep",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/builds/:build_id/artifacts/keep",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"builds",
																":build_id",
																"artifacts",
																"keep"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "build_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a build"
																}
															]
														},
														"description": "Keep the artifacts to prevent them from being deleted"
													},
													"response": []
												}
											]
										},
										{
											"name": "Get Projects  Builds Build",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/builds/:build_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"builds",
														":build_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "build_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a build"
														}
													]
												},
												"description": "Get a specific build of a project"
											},
											"response": []
										},
										{
											"name": "Add Projects  Builds Build  Cancel",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/builds/:build_id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"builds",
														":build_id",
														"cancel"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "build_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a build"
														}
													]
												},
												"description": "Cancel a specific build of a project"
											},
											"response": []
										},
										{
											"name": "Add Projects  Builds Build  Erase",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/builds/:build_id/erase",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"builds",
														":build_id",
														"erase"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "build_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a build"
														}
													]
												},
												"description": "Erase build (remove artifacts and build trace)"
											},
											"response": []
										},
										{
											"name": "Add Projects  Builds Build  Play",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/builds/:build_id/play",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"builds",
														":build_id",
														"play"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "build_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a build"
														}
													]
												},
												"description": "This feature was added in GitLab 8.11"
											},
											"response": []
										},
										{
											"name": "Add Projects  Builds Build  Retry",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/builds/:build_id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"builds",
														":build_id",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "build_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a build"
														}
													]
												},
												"description": "Retry a specific build of a project"
											},
											"response": []
										},
										{
											"name": "Get Projects  Builds Build  Trace",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/builds/:build_id/trace",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"builds",
														":build_id",
														"trace"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "build_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a build"
														}
													]
												},
												"description": "Get a trace of a specific build of a project"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Builds",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/builds?scope=<>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"builds"
											],
											"query": [
												{
													"key": "scope",
													"value": "<>",
													"description": "The scope of builds to show"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get a project builds"
									},
									"response": []
								},
								{
									"name": "Get Projects  Builds Artifacts Ref Name Download",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/builds/artifacts/:ref_name/download?job=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"builds",
												"artifacts",
												":ref_name",
												"download"
											],
											"query": [
												{
													"key": "job",
													"value": "<>",
													"description": "The name for the build"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "ref_name",
													"value": "<>",
													"type": "string",
													"description": "The ref from repository"
												}
											]
										},
										"description": "Get projects  builds artifacts ref name download"
									},
									"response": []
								}
							]
						},
						{
							"name": "deploy keys",
							"item": [
								{
									"name": "{key id}",
									"item": [
										{
											"name": "Delete Projects  Deploy Keys Key",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/deploy_keys/:key_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"deploy_keys",
														":key_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "key_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of the deploy key"
														}
													]
												},
												"description": "Delete projects  deploy keys key"
											},
											"response": []
										},
										{
											"name": "Delete Projects  Deploy Keys Key  Disable",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/deploy_keys/:key_id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"deploy_keys",
														":key_id",
														"disable"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "key_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of the deploy key"
														}
													]
												},
												"description": "Delete projects  deploy keys key  disable"
											},
											"response": []
										},
										{
											"name": "Add Projects  Deploy Keys Key  Enable",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/deploy_keys/:key_id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"deploy_keys",
														":key_id",
														"enable"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "key_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of the deploy key"
														}
													]
												},
												"description": "Post projects  deploy keys key  enable"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Deploy Keys",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/deploy_keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"deploy_keys"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get a specific project's deploy keys"
									},
									"response": []
								}
							]
						},
						{
							"name": "deployments",
							"item": [
								{
									"name": "Get Projects  Deployments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/deployments?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"deployments"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.11."
									},
									"response": []
								},
								{
									"name": "Get Projects  Deployments Deployment",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/deployments/:deployment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"deployments",
												":deployment_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "deployment_id",
													"value": "<>",
													"type": "string",
													"description": "The deployment ID"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.11."
									},
									"response": []
								}
							]
						},
						{
							"name": "environments",
							"item": [
								{
									"name": "Get Projects  Environments",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/environments?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"environments"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.11."
									},
									"response": []
								},
								{
									"name": "Delete Projects  Environments Environment",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/environments/:environment_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"environments",
												":environment_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "environment_id",
													"value": "<>",
													"type": "string",
													"description": "The environment ID"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.11."
									},
									"response": []
								}
							]
						},
						{
							"name": "fork",
							"item": [
								{
									"name": "Delete Projects  Fork",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/fork",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"fork"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Remove a forked_from relationship"
									},
									"response": []
								},
								{
									"name": "Add Projects  Fork Forked From",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/fork/:forked_from_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"fork",
												":forked_from_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "forked_from_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of the project it was forked from"
												}
											]
										},
										"description": "Mark this project as forked from another"
									},
									"response": []
								}
							]
						},
						{
							"name": "hooks",
							"item": [
								{
									"name": "Get Projects  Hooks",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/hooks?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"hooks"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get projects  hooks"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Hooks Hook",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/hooks/:hook_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"hooks",
												":hook_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "hook_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of the hook to delete"
												}
											]
										},
										"description": "Delete projects  hooks hook"
									},
									"response": []
								}
							]
						},
						{
							"name": "issues",
							"item": [
								{
									"name": "{issue id}",
									"item": [
										{
											"name": "award emoji",
											"item": [
												{
													"name": "Get Projects  Issues Issue  Award Emoji",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/award_emoji?page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"issues",
																":issue_id",
																"award_emoji"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "issue_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project issue"
																}
															]
														},
														"description": "Get projects  issues issue  award emoji"
													},
													"response": []
												},
												{
													"name": "Delete Projects  Issues Issue  Award Emoji Award",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/award_emoji/:award_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"issues",
																":issue_id",
																"award_emoji",
																":award_id"
															],
															"variable": [
																{
																	"key": "award_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of an award emoji"
																},
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "issue_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project issue"
																}
															]
														},
														"description": "Delete projects  issues issue  award emoji award"
													},
													"response": []
												}
											]
										},
										{
											"name": "notes/{note id}/award emoji",
											"item": [
												{
													"name": "Get Projects  Issues Issue  Notes Note  Award Emoji",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/notes/:note_id/award_emoji?page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"issues",
																":issue_id",
																"notes",
																":note_id",
																"award_emoji"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "issue_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project issue"
																},
																{
																	"key": "note_id",
																	"value": "<>",
																	"type": "string",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"description": "Get projects  issues issue  notes note  award emoji"
													},
													"response": []
												},
												{
													"name": "Delete Projects  Issues Issue  Notes Note  Award Emoji Award",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/notes/:note_id/award_emoji/:award_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"issues",
																":issue_id",
																"notes",
																":note_id",
																"award_emoji",
																":award_id"
															],
															"variable": [
																{
																	"key": "award_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of an award emoji"
																},
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "issue_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project issue"
																},
																{
																	"key": "note_id",
																	"value": "<>",
																	"type": "string",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"description": "Delete projects  issues issue  notes note  award emoji award"
													},
													"response": []
												}
											]
										},
										{
											"name": "Delete Projects  Issues Issue",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Delete projects  issues issue"
											},
											"response": []
										},
										{
											"name": "Add Projects  Issues Issue  Add Spent Time",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/add_spent_time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id",
														"add_spent_time"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Post projects  issues issue  add spent time"
											},
											"response": []
										},
										{
											"name": "Add Projects  Issues Issue  Move",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/move",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id",
														"move"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Post projects  issues issue  move"
											},
											"response": []
										},
										{
											"name": "Add Projects  Issues Issue  Reset Spent Time",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/reset_spent_time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id",
														"reset_spent_time"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Post projects  issues issue  reset spent time"
											},
											"response": []
										},
										{
											"name": "Add Projects  Issues Issue  Reset Time Estimate",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/reset_time_estimate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id",
														"reset_time_estimate"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Post projects  issues issue  reset time estimate"
											},
											"response": []
										},
										{
											"name": "Add Projects  Issues Issue  Time Estimate",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/time_estimate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id",
														"time_estimate"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Post projects  issues issue  time estimate"
											},
											"response": []
										},
										{
											"name": "Get Projects  Issues Issue  Time Stats",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/time_stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id",
														"time_stats"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Get projects  issues issue  time stats"
											},
											"response": []
										},
										{
											"name": "Add Projects  Issues Issue  Todo",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:issue_id/todo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":issue_id",
														"todo"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "issue_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project issue"
														}
													]
												},
												"description": "Post projects  issues issue  todo"
											},
											"response": []
										}
									]
								},
								{
									"name": "{noteable id}/notes",
									"item": [
										{
											"name": "Get Projects  Issues Noteable  Notes",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:noteable_id/notes?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":noteable_id",
														"notes"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "noteable_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of the noteable"
														}
													]
												},
												"description": "Get a list of project +noteable+ notes"
											},
											"response": []
										},
										{
											"name": "Delete Projects  Issues Noteable  Notes Note",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/issues/:noteable_id/notes/:note_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"issues",
														":noteable_id",
														"notes",
														":note_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "noteable_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of the noteable"
														},
														{
															"key": "note_id",
															"value": "<>",
															"type": "string",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													]
												},
												"description": "Delete projects  issues noteable  notes note"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Issues",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/issues?state=<get>&iid=<get>&labels=<get>&milestone=<object>&order_by=<>&sort=<>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"issues"
											],
											"query": [
												{
													"key": "state",
													"value": "<get>",
													"description": "Return opened, closed, or all issues"
												},
												{
													"key": "iid",
													"value": "<get>",
													"description": "Return the issue having the given `iid`"
												},
												{
													"key": "labels",
													"value": "<get>",
													"description": "Comma-separated list of label names"
												},
												{
													"key": "milestone",
													"value": "<object>",
													"description": "Return issues for a specific milestone"
												},
												{
													"key": "order_by",
													"value": "<>",
													"description": "Order by name or path"
												},
												{
													"key": "sort",
													"value": "<>",
													"description": "Sort by asc (ascending) or desc (descending)"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get a list of project issues"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Issues Subscribable  Subscription",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/issues/:subscribable_id/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"issues",
												":subscribable_id",
												"subscription"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "subscribable_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of a resource"
												}
											]
										},
										"description": "Delete projects  issues subscribable  subscription"
									},
									"response": []
								}
							]
						},
						{
							"name": "keys",
							"item": [
								{
									"name": "{key id}",
									"item": [
										{
											"name": "Delete Projects  Keys Key",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/keys/:key_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"keys",
														":key_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "key_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of the deploy key"
														}
													]
												},
												"description": "Delete deploy key for a project"
											},
											"response": []
										},
										{
											"name": "Delete Projects  Keys Key  Disable",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/keys/:key_id/disable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"keys",
														":key_id",
														"disable"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "key_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of the deploy key"
														}
													]
												},
												"description": "This feature was added in GitLab 8.11"
											},
											"response": []
										},
										{
											"name": "Add Projects  Keys Key  Enable",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/keys/:key_id/enable",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"keys",
														":key_id",
														"enable"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "key_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of the deploy key"
														}
													]
												},
												"description": "This feature was added in GitLab 8.11"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Keys",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"keys"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get a specific project's deploy keys"
									},
									"response": []
								}
							]
						},
						{
							"name": "labels",
							"item": [
								{
									"name": "Delete Projects  Labels",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/labels?name=<get>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"labels"
											],
											"query": [
												{
													"key": "name",
													"value": "<get>",
													"description": "The name of the label to be deleted"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Delete an existing label"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Labels Subscribable  Subscription",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/labels/:subscribable_id/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"labels",
												":subscribable_id",
												"subscription"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "subscribable_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of a resource"
												}
											]
										},
										"description": "Delete projects  labels subscribable  subscription"
									},
									"response": []
								}
							]
						},
						{
							"name": "members",
							"item": [
								{
									"name": "Get Projects  Members",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/members?query=<>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"members"
											],
											"query": [
												{
													"key": "query",
													"value": "<>",
													"description": "A query string to search for members"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Gets a list of group or project members viewable by the authenticated user."
									},
									"response": []
								},
								{
									"name": "Delete Projects  Members User",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/members/:user_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"members",
												":user_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "user_id",
													"value": "<>",
													"type": "string",
													"description": "The user ID of the access requester"
												}
											]
										},
										"description": "Removes a user from a group or project."
									},
									"response": []
								}
							]
						},
						{
							"name": "merge request",
							"item": [
								{
									"name": "{merge request id}",
									"item": [
										{
											"name": "Get Projects  Merge Request Merge Request",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_request/:merge_request_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_request",
														":merge_request_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "This endpoint is deprecated and will be removed in GitLab 9.0."
											},
											"response": []
										},
										{
											"name": "Add Projects  Merge Request Merge Request  Cancel Merge When Build Succeeds",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_request/:merge_request_id/cancel_merge_when_build_succeeds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_request",
														":merge_request_id",
														"cancel_merge_when_build_succeeds"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Post projects  merge request merge request  cancel merge when build succeeds"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Request Merge Request  Changes",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_request/:merge_request_id/changes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_request",
														":merge_request_id",
														"changes"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge request merge request  changes"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Request Merge Request  Closes Issues",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_request/:merge_request_id/closes_issues?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_request",
														":merge_request_id",
														"closes_issues"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge request merge request  closes issues"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Request Merge Request  Comments",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_request/:merge_request_id/comments?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_request",
														":merge_request_id",
														"comments"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge request merge request  comments"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Request Merge Request  Commits",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_request/:merge_request_id/commits",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_request",
														":merge_request_id",
														"commits"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge request merge request  commits"
											},
											"response": []
										},
										{
											"name": "Put Projects  Merge Request Merge Request  Merge",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_request/:merge_request_id/merge",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_request",
														":merge_request_id",
														"merge"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Put projects  merge request merge request  merge"
											},
											"response": []
										}
									]
								},
								{
									"name": "Delete Projects  Merge Request Subscribable  Subscription",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/merge_request/:subscribable_id/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"merge_request",
												":subscribable_id",
												"subscription"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "subscribable_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of a resource"
												}
											]
										},
										"description": "Delete projects  merge request subscribable  subscription"
									},
									"response": []
								}
							]
						},
						{
							"name": "merge requests",
							"item": [
								{
									"name": "{merge request id}",
									"item": [
										{
											"name": "award emoji",
											"item": [
												{
													"name": "Get Projects  Merge Requests Merge Request  Award Emoji",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/award_emoji?page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"award_emoji"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "merge_request_id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a merge request"
																}
															]
														},
														"description": "Get projects  merge requests merge request  award emoji"
													},
													"response": []
												},
												{
													"name": "Delete Projects  Merge Requests Merge Request  Award Emoji Award",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/award_emoji/:award_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"award_emoji",
																":award_id"
															],
															"variable": [
																{
																	"key": "award_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of an award emoji"
																},
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "merge_request_id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a merge request"
																}
															]
														},
														"description": "Delete projects  merge requests merge request  award emoji award"
													},
													"response": []
												}
											]
										},
										{
											"name": "notes/{note id}/award emoji",
											"item": [
												{
													"name": "Get Projects  Merge Requests Merge Request  Notes Note  Award Emoji",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji?page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"notes",
																":note_id",
																"award_emoji"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "merge_request_id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a merge request"
																},
																{
																	"key": "note_id",
																	"value": "<>",
																	"type": "string",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"description": "Get projects  merge requests merge request  notes note  award emoji"
													},
													"response": []
												},
												{
													"name": "Delete Projects  Merge Requests Merge Request  Notes Note  Award Emoji Award",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/notes/:note_id/award_emoji/:award_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"notes",
																":note_id",
																"award_emoji",
																":award_id"
															],
															"variable": [
																{
																	"key": "award_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of an award emoji"
																},
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "merge_request_id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a merge request"
																},
																{
																	"key": "note_id",
																	"value": "<>",
																	"type": "string",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"description": "Delete projects  merge requests merge request  notes note  award emoji award"
													},
													"response": []
												}
											]
										},
										{
											"name": "versions",
											"item": [
												{
													"name": "Get Projects  Merge Requests Merge Request  Versions",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"versions"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "merge_request_id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a merge request"
																}
															]
														},
														"description": "Get projects  merge requests merge request  versions"
													},
													"response": []
												},
												{
													"name": "Get Projects  Merge Requests Merge Request  Versions Version",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/versions/:version_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"merge_requests",
																":merge_request_id",
																"versions",
																":version_id"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "merge_request_id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a merge request"
																},
																{
																	"key": "version_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a merge request diff version"
																}
															]
														},
														"description": "Get projects  merge requests merge request  versions version"
													},
													"response": []
												}
											]
										},
										{
											"name": "Delete Projects  Merge Requests Merge Request",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Delete projects  merge requests merge request"
											},
											"response": []
										},
										{
											"name": "Add Projects  Merge Requests Merge Request  Add Spent Time",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/add_spent_time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"add_spent_time"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Post projects  merge requests merge request  add spent time"
											},
											"response": []
										},
										{
											"name": "Add Projects  Merge Requests Merge Request  Cancel Merge When Build Succeeds",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/cancel_merge_when_build_succeeds",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"cancel_merge_when_build_succeeds"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Post projects  merge requests merge request  cancel merge when build succeeds"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Requests Merge Request  Changes",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/changes",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"changes"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge requests merge request  changes"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Requests Merge Request  Closes Issues",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/closes_issues?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"closes_issues"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge requests merge request  closes issues"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Requests Merge Request  Comments",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/comments?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"comments"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge requests merge request  comments"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Requests Merge Request  Commits",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/commits",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"commits"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge requests merge request  commits"
											},
											"response": []
										},
										{
											"name": "Put Projects  Merge Requests Merge Request  Merge",
											"request": {
												"method": "PUT",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/merge",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"merge"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Put projects  merge requests merge request  merge"
											},
											"response": []
										},
										{
											"name": "Add Projects  Merge Requests Merge Request  Reset Spent Time",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/reset_spent_time",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"reset_spent_time"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Post projects  merge requests merge request  reset spent time"
											},
											"response": []
										},
										{
											"name": "Add Projects  Merge Requests Merge Request  Reset Time Estimate",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/reset_time_estimate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"reset_time_estimate"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Post projects  merge requests merge request  reset time estimate"
											},
											"response": []
										},
										{
											"name": "Add Projects  Merge Requests Merge Request  Time Estimate",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/time_estimate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"time_estimate"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Post projects  merge requests merge request  time estimate"
											},
											"response": []
										},
										{
											"name": "Get Projects  Merge Requests Merge Request  Time Stats",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/time_stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"time_stats"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Get projects  merge requests merge request  time stats"
											},
											"response": []
										},
										{
											"name": "Add Projects  Merge Requests Merge Request  Todo",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:merge_request_id/todo",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":merge_request_id",
														"todo"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "merge_request_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a merge request"
														}
													]
												},
												"description": "Post projects  merge requests merge request  todo"
											},
											"response": []
										}
									]
								},
								{
									"name": "{noteable id}/notes",
									"item": [
										{
											"name": "Get Projects  Merge Requests Noteable  Notes",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:noteable_id/notes?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":noteable_id",
														"notes"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "noteable_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of the noteable"
														}
													]
												},
												"description": "Get projects  merge requests noteable  notes"
											},
											"response": []
										},
										{
											"name": "Delete Projects  Merge Requests Noteable  Notes Note",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/merge_requests/:noteable_id/notes/:note_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"merge_requests",
														":noteable_id",
														"notes",
														":note_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "noteable_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of the noteable"
														},
														{
															"key": "note_id",
															"value": "<>",
															"type": "string",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													]
												},
												"description": "Delete projects  merge requests noteable  notes note"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Merge Requests",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/merge_requests?state=<get>&order_by=<>&sort=<>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"merge_requests"
											],
											"query": [
												{
													"key": "state",
													"value": "<get>",
													"description": "Return opened, closed, or all issues"
												},
												{
													"key": "order_by",
													"value": "<>",
													"description": "Order by name or path"
												},
												{
													"key": "sort",
													"value": "<>",
													"description": "Sort by asc (ascending) or desc (descending)"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get projects  merge requests"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Merge Requests Subscribable  Subscription",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/merge_requests/:subscribable_id/subscription",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"merge_requests",
												":subscribable_id",
												"subscription"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "subscribable_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of a resource"
												}
											]
										},
										"description": "Delete projects  merge requests subscribable  subscription"
									},
									"response": []
								}
							]
						},
						{
							"name": "milestones",
							"item": [
								{
									"name": "{milestone id}",
									"item": [
										{
											"name": "Get Projects  Milestones Milestone",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/milestones/:milestone_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"milestones",
														":milestone_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "milestone_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project milestone"
														}
													]
												},
												"description": "Get projects  milestones milestone"
											},
											"response": []
										},
										{
											"name": "Get Projects  Milestones Milestone  Issues",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/milestones/:milestone_id/issues?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"milestones",
														":milestone_id",
														"issues"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "milestone_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project milestone"
														}
													]
												},
												"description": "Get all issues for a single project milestone"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Milestones",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/milestones?state=<get>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"milestones"
											],
											"query": [
												{
													"key": "state",
													"value": "<get>",
													"description": "Return opened, closed, or all issues"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get a list of project milestones"
									},
									"response": []
								}
							]
						},
						{
							"name": "pipelines",
							"item": [
								{
									"name": "{pipeline id}",
									"item": [
										{
											"name": "Get Projects  Pipelines Pipeline",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/pipelines/:pipeline_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"pipelines",
														":pipeline_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "pipeline_id",
															"value": "<>",
															"type": "string",
															"description": "The pipeline ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11"
											},
											"response": []
										},
										{
											"name": "Add Projects  Pipelines Pipeline  Cancel",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/pipelines/:pipeline_id/cancel",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"pipelines",
														":pipeline_id",
														"cancel"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "pipeline_id",
															"value": "<>",
															"type": "string",
															"description": "The pipeline ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": []
										},
										{
											"name": "Add Projects  Pipelines Pipeline  Retry",
											"request": {
												"method": "POST",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/pipelines/:pipeline_id/retry",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"pipelines",
														":pipeline_id",
														"retry"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "pipeline_id",
															"value": "<>",
															"type": "string",
															"description": "The pipeline ID"
														}
													]
												},
												"description": "This feature was introduced in GitLab 8.11."
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Pipelines",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/pipelines?page=<>&per_page=<>&scope=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"pipelines"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												},
												{
													"key": "scope",
													"value": "<>",
													"description": "The scope of builds to show"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "This feature was introduced in GitLab 8.11."
									},
									"response": []
								}
							]
						},
						{
							"name": "repository",
							"item": [
								{
									"name": "branches",
									"item": [
										{
											"name": "{branch}",
											"item": [
												{
													"name": "Delete Projects  Repository Branches Branch",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/branches/:branch",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"branches",
																":branch"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "branch",
																	"value": "<>",
																	"type": "string",
																	"description": "The name of the branch"
																}
															]
														},
														"description": "Delete projects  repository branches branch"
													},
													"response": []
												},
												{
													"name": "Put Projects  Repository Branches Branch Protect",
													"request": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/branches/:branch/protect",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"branches",
																":branch",
																"protect"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "branch",
																	"value": "<>",
																	"type": "string",
																	"description": "The name of the branch"
																}
															]
														},
														"description": "Put projects  repository branches branch protect"
													},
													"response": []
												},
												{
													"name": "Put Projects  Repository Branches Branch Unprotect",
													"request": {
														"method": "PUT",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/branches/:branch/unprotect",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"branches",
																":branch",
																"unprotect"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "branch",
																	"value": "<>",
																	"type": "string",
																	"description": "The name of the branch"
																}
															]
														},
														"description": "Put projects  repository branches branch unprotect"
													},
													"response": []
												}
											]
										},
										{
											"name": "Get Projects  Repository Branches",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/repository/branches",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"repository",
														"branches"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														}
													]
												},
												"description": "Get a project repository branches"
											},
											"response": []
										}
									]
								},
								{
									"name": "commits",
									"item": [
										{
											"name": "{sha}",
											"item": [
												{
													"name": "Get Projects  Repository Commits Sha",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/commits/:sha",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"commits",
																":sha"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "sha",
																	"value": "<get>",
																	"type": "string",
																	"description": "The commit, branch name, or tag name"
																}
															]
														},
														"description": "Get projects  repository commits sha"
													},
													"response": []
												},
												{
													"name": "Get Projects  Repository Commits Sha Blob",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/commits/:sha/blob?filepath=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"commits",
																":sha",
																"blob"
															],
															"query": [
																{
																	"key": "filepath",
																	"value": "<>",
																	"description": "The path to the file to display"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "sha",
																	"value": "<get>",
																	"type": "string",
																	"description": "The commit, branch name, or tag name"
																}
															]
														},
														"description": "Get projects  repository commits sha blob"
													},
													"response": []
												},
												{
													"name": "Get Projects  Repository Commits Sha Builds",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/commits/:sha/builds?scope=<>&page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"commits",
																":sha",
																"builds"
															],
															"query": [
																{
																	"key": "scope",
																	"value": "<>",
																	"description": "The scope of builds to show"
																},
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "sha",
																	"value": "<get>",
																	"type": "string",
																	"description": "The commit, branch name, or tag name"
																}
															]
														},
														"description": "Get builds for a specific commit of a project"
													},
													"response": []
												},
												{
													"name": "Add Projects  Repository Commits Sha Cherry Pick",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/commits/:sha/cherry_pick",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"commits",
																":sha",
																"cherry_pick"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "sha",
																	"value": "<get>",
																	"type": "string",
																	"description": "The commit, branch name, or tag name"
																}
															]
														},
														"description": "Post projects  repository commits sha cherry pick"
													},
													"response": []
												},
												{
													"name": "Get Projects  Repository Commits Sha Comments",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/commits/:sha/comments?page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"commits",
																":sha",
																"comments"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "sha",
																	"value": "<get>",
																	"type": "string",
																	"description": "The commit, branch name, or tag name"
																}
															]
														},
														"description": "Get projects  repository commits sha comments"
													},
													"response": []
												},
												{
													"name": "Get Projects  Repository Commits Sha Diff",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/commits/:sha/diff",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"commits",
																":sha",
																"diff"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "sha",
																	"value": "<get>",
																	"type": "string",
																	"description": "The commit, branch name, or tag name"
																}
															]
														},
														"description": "Get the diff for a specific commit of a project"
													},
													"response": []
												},
												{
													"name": "Get Projects  Repository Commits Sha Statuses",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/commits/:sha/statuses?ref=<get>&stage=<get>&name=<get>&all=<>&page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"commits",
																":sha",
																"statuses"
															],
															"query": [
																{
																	"key": "ref",
																	"value": "<get>",
																	"description": "The ref"
																},
																{
																	"key": "stage",
																	"value": "<get>",
																	"description": "The stage"
																},
																{
																	"key": "name",
																	"value": "<get>",
																	"description": "The name of the label to be deleted"
																},
																{
																	"key": "all",
																	"value": "<>",
																	"description": "Show all statuses, default: false"
																},
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "sha",
																	"value": "<get>",
																	"type": "string",
																	"description": "The commit, branch name, or tag name"
																}
															]
														},
														"description": "Get projects  repository commits sha statuses"
													},
													"response": []
												}
											]
										},
										{
											"name": "Get Projects  Repository Commits",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/repository/commits?ref_name=<>&since=<>&until=<>&page=<>&per_page=<>&path=<get>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"repository",
														"commits"
													],
													"query": [
														{
															"key": "ref_name",
															"value": "<>",
															"description": "The name of a repository branch or tag, if not given the default branch is used"
														},
														{
															"key": "since",
															"value": "<>",
															"description": "Only commits after or in this date will be returned"
														},
														{
															"key": "until",
															"value": "<>",
															"description": "Only commits before or in this date will be returned"
														},
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														},
														{
															"key": "path",
															"value": "<get>",
															"description": "The file path"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														}
													]
												},
												"description": "Get a project repository commits"
											},
											"response": []
										}
									]
								},
								{
									"name": "tags",
									"item": [
										{
											"name": "{tag name}",
											"item": [
												{
													"name": "Delete Projects  Repository Tags Tag Name",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/tags/:tag_name",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"tags",
																":tag_name"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "tag_name",
																	"value": "<get>",
																	"type": "string",
																	"description": "The name of the tag"
																}
															]
														},
														"description": "Delete projects  repository tags tag name"
													},
													"response": []
												},
												{
													"name": "Add Projects  Repository Tags Tag Name Release",
													"request": {
														"method": "POST",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/repository/tags/:tag_name/release",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"repository",
																"tags",
																":tag_name",
																"release"
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "tag_name",
																	"value": "<get>",
																	"type": "string",
																	"description": "The name of the tag"
																}
															]
														},
														"description": "Post projects  repository tags tag name release"
													},
													"response": []
												}
											]
										},
										{
											"name": "Get Projects  Repository Tags",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/repository/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"repository",
														"tags"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														}
													]
												},
												"description": "Get a project repository tags"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Repository Archive",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/archive?sha=<get>&format=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"archive"
											],
											"query": [
												{
													"key": "sha",
													"value": "<get>",
													"description": "The commit sha of the archive to be downloaded"
												},
												{
													"key": "format",
													"value": "<>",
													"description": "The archive format"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get an archive of the repository"
									},
									"response": []
								},
								{
									"name": "Get Projects  Repository Blobs Sha",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/blobs/:sha?filepath=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"blobs",
												":sha"
											],
											"query": [
												{
													"key": "filepath",
													"value": "<>",
													"description": "The path to the file to display"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "sha",
													"value": "<get>",
													"type": "string",
													"description": "The commit, branch name, or tag name"
												}
											]
										},
										"description": "Get projects  repository blobs sha"
									},
									"response": []
								},
								{
									"name": "Get Projects  Repository Compare",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/compare?from=<>&to=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"compare"
											],
											"query": [
												{
													"key": "from",
													"value": "<>",
													"description": "The commit, branch name, or tag name to start comparison"
												},
												{
													"key": "to",
													"value": "<>",
													"description": "The commit, branch name, or tag name to stop comparison"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Compare two branches, tags, or commits"
									},
									"response": []
								},
								{
									"name": "Get Projects  Repository Contributors",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/contributors",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"contributors"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get projects  repository contributors"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Repository Files",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/files?file_path=<>&branch_name=<>&commit_message=<>&author_email=<get>&author_name=<get>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"files"
											],
											"query": [
												{
													"key": "file_path",
													"value": "<>",
													"description": "The path to new file. Ex. lib/class.rb"
												},
												{
													"key": "branch_name",
													"value": "<>",
													"description": "The name of branch"
												},
												{
													"key": "commit_message",
													"value": "<>",
													"description": "Commit Message"
												},
												{
													"key": "author_email",
													"value": "<get>",
													"description": "The email of the author"
												},
												{
													"key": "author_name",
													"value": "<get>",
													"description": "The name of the author"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Delete an existing file in repository"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Repository Merged Branches",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/merged_branches",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"merged_branches"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Delete projects  repository merged branches"
									},
									"response": []
								},
								{
									"name": "Get Projects  Repository Raw Blobs Sha",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/raw_blobs/:sha",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"raw_blobs",
												":sha"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "sha",
													"value": "<get>",
													"type": "string",
													"description": "The commit, branch name, or tag name"
												}
											]
										},
										"description": "Get projects  repository raw blobs sha"
									},
									"response": []
								},
								{
									"name": "Get Projects  Repository Tree",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/repository/tree?ref_name=<>&path=<get>&recursive=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"repository",
												"tree"
											],
											"query": [
												{
													"key": "ref_name",
													"value": "<>",
													"description": "The name of a repository branch or tag, if not given the default branch is used"
												},
												{
													"key": "path",
													"value": "<get>",
													"description": "The file path"
												},
												{
													"key": "recursive",
													"value": "<>",
													"description": "Used to get a recursive tree"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get a project repository tree"
									},
									"response": []
								}
							]
						},
						{
							"name": "runners",
							"item": [
								{
									"name": "Get Projects  Runners",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/runners?scope=<>&page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"runners"
											],
											"query": [
												{
													"key": "scope",
													"value": "<>",
													"description": "The scope of builds to show"
												},
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get runners available for project"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Runners Runner",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/runners/:runner_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"runners",
												":runner_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "runner_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of the runner"
												}
											]
										},
										"description": "Delete projects  runners runner"
									},
									"response": []
								}
							]
						},
						{
							"name": "services",
							"item": [
								{
									"name": "Put Projects  Services Asana",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/asana",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"asana"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set asana service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Assembla",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/assembla",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"assembla"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set assembla service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Bamboo",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/bamboo",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"bamboo"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set bamboo service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Bugzilla",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/bugzilla",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"bugzilla"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set bugzilla service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Buildkite",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/buildkite",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"buildkite"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set buildkite service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Builds Email",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/builds-email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"builds-email"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set builds-email service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Campfire",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/campfire",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"campfire"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set campfire service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Custom Issue Tracker",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/custom-issue-tracker",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"custom-issue-tracker"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set custom-issue-tracker service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Drone Ci",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/drone-ci",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"drone-ci"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set drone-ci service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Emails On Push",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/emails-on-push",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"emails-on-push"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set emails-on-push service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services External Wiki",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/external-wiki",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"external-wiki"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set external-wiki service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Flowdock",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/flowdock",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"flowdock"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set flowdock service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Gemnasium",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/gemnasium",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"gemnasium"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set gemnasium service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Hipchat",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/hipchat",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"hipchat"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set hipchat service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Irker",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/irker",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"irker"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set irker service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Jira",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/jira",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"jira"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set jira service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Kubernetes",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/kubernetes",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"kubernetes"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set kubernetes service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Mattermost",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/mattermost",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"mattermost"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set mattermost service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Mattermost Slash Commands",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/mattermost-slash-commands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"mattermost-slash-commands"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set mattermost-slash-commands service for project"
									},
									"response": []
								},
								{
									"name": "Add Projects  Services Mattermost Slash Commands Trigger",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/mattermost_slash_commands/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"mattermost_slash_commands",
												"trigger"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Post projects  services mattermost slash commands trigger"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Pipelines Email",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/pipelines-email",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"pipelines-email"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set pipelines-email service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Pivotaltracker",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/pivotaltracker",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"pivotaltracker"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set pivotaltracker service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Pushover",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/pushover",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"pushover"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set pushover service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Redmine",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/redmine",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"redmine"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set redmine service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Slack",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/slack",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"slack"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set slack service for project"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Slack Slash Commands",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/slack-slash-commands",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"slack-slash-commands"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set slack-slash-commands service for project"
									},
									"response": []
								},
								{
									"name": "Add Projects  Services Slack Slash Commands Trigger",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/slack_slash_commands/trigger",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"slack_slash_commands",
												"trigger"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Post projects  services slack slash commands trigger"
									},
									"response": []
								},
								{
									"name": "Put Projects  Services Teamcity",
									"request": {
										"method": "PUT",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/teamcity",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												"teamcity"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Set teamcity service for project"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Services Service Slug",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/services/:service_slug",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"services",
												":service_slug"
											],
											"variable": [
												{
													"key": "service_slug",
													"value": "<>",
													"type": "string",
													"description": "The name of the service"
												},
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Delete projects  services service slug"
									},
									"response": []
								}
							]
						},
						{
							"name": "share",
							"item": [
								{
									"name": "Add Projects  Share",
									"request": {
										"method": "POST",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/share",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"share"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Share the project with a group"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Share Group",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/share/:group_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"share",
												":group_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "group_id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of the group"
												}
											]
										},
										"description": "Delete projects  share group"
									},
									"response": []
								}
							]
						},
						{
							"name": "snippets",
							"item": [
								{
									"name": "{noteable id}/notes",
									"item": [
										{
											"name": "Get Projects  Snippets Noteable  Notes",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/snippets/:noteable_id/notes?page=<>&per_page=<>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"snippets",
														":noteable_id",
														"notes"
													],
													"query": [
														{
															"key": "page",
															"value": "<>",
															"description": "Current page number"
														},
														{
															"key": "per_page",
															"value": "<>",
															"description": "Number of items per page"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "noteable_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of the noteable"
														}
													]
												},
												"description": "Get a list of project +noteable+ notes"
											},
											"response": []
										},
										{
											"name": "Delete Projects  Snippets Noteable  Notes Note",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/snippets/:noteable_id/notes/:note_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"snippets",
														":noteable_id",
														"notes",
														":note_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "noteable_id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of the noteable"
														},
														{
															"key": "note_id",
															"value": "<>",
															"type": "string",
															"description": {
																"content": "",
																"type": "text/plain"
															}
														}
													]
												},
												"description": "Delete projects  snippets noteable  notes note"
											},
											"response": []
										}
									]
								},
								{
									"name": "{snippet id}",
									"item": [
										{
											"name": "award emoji",
											"item": [
												{
													"name": "Get Projects  Snippets Snippet  Award Emoji",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/snippets/:snippet_id/award_emoji?page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"snippets",
																":snippet_id",
																"award_emoji"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "snippet_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project snippet"
																}
															]
														},
														"description": "Get projects  snippets snippet  award emoji"
													},
													"response": []
												},
												{
													"name": "Delete Projects  Snippets Snippet  Award Emoji Award",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/snippets/:snippet_id/award_emoji/:award_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"snippets",
																":snippet_id",
																"award_emoji",
																":award_id"
															],
															"variable": [
																{
																	"key": "award_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of an award emoji"
																},
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "snippet_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project snippet"
																}
															]
														},
														"description": "Delete projects  snippets snippet  award emoji award"
													},
													"response": []
												}
											]
										},
										{
											"name": "notes/{note id}/award emoji",
											"item": [
												{
													"name": "Get Projects  Snippets Snippet  Notes Note  Award Emoji",
													"request": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji?page=<>&per_page=<>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"snippets",
																":snippet_id",
																"notes",
																":note_id",
																"award_emoji"
															],
															"query": [
																{
																	"key": "page",
																	"value": "<>",
																	"description": "Current page number"
																},
																{
																	"key": "per_page",
																	"value": "<>",
																	"description": "Number of items per page"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "snippet_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project snippet"
																},
																{
																	"key": "note_id",
																	"value": "<>",
																	"type": "string",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"description": "Get projects  snippets snippet  notes note  award emoji"
													},
													"response": []
												},
												{
													"name": "Delete Projects  Snippets Snippet  Notes Note  Award Emoji Award",
													"request": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/projects/:id/snippets/:snippet_id/notes/:note_id/award_emoji/:award_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"projects",
																":id",
																"snippets",
																":snippet_id",
																"notes",
																":note_id",
																"award_emoji",
																":award_id"
															],
															"variable": [
																{
																	"key": "award_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of an award emoji"
																},
																{
																	"key": "id",
																	"value": "<get>",
																	"type": "string",
																	"description": "The ID of a group"
																},
																{
																	"key": "snippet_id",
																	"value": "<>",
																	"type": "string",
																	"description": "The ID of a project snippet"
																},
																{
																	"key": "note_id",
																	"value": "<>",
																	"type": "string",
																	"description": {
																		"content": "",
																		"type": "text/plain"
																	}
																}
															]
														},
														"description": "Delete projects  snippets snippet  notes note  award emoji award"
													},
													"response": []
												}
											]
										},
										{
											"name": "Delete Projects  Snippets Snippet",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/snippets/:snippet_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"snippets",
														":snippet_id"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "snippet_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project snippet"
														}
													]
												},
												"description": "Delete projects  snippets snippet"
											},
											"response": []
										},
										{
											"name": "Get Projects  Snippets Snippet  Raw",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/projects/:id/snippets/:snippet_id/raw",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"projects",
														":id",
														"snippets",
														":snippet_id",
														"raw"
													],
													"variable": [
														{
															"key": "id",
															"value": "<get>",
															"type": "string",
															"description": "The ID of a group"
														},
														{
															"key": "snippet_id",
															"value": "<>",
															"type": "string",
															"description": "The ID of a project snippet"
														}
													]
												},
												"description": "Get projects  snippets snippet  raw"
											},
											"response": []
										}
									]
								},
								{
									"name": "Get Projects  Snippets",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/snippets?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"snippets"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get all project snippets"
									},
									"response": []
								}
							]
						},
						{
							"name": "triggers",
							"item": [
								{
									"name": "Get Projects  Triggers",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/triggers?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"triggers"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get projects  triggers"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Triggers Token",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/triggers/:token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"triggers",
												":token"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "token",
													"value": "<get>",
													"type": "string",
													"description": "The unique token of trigger"
												}
											]
										},
										"description": "Delete projects  triggers token"
									},
									"response": []
								}
							]
						},
						{
							"name": "variables",
							"item": [
								{
									"name": "Get Projects  Variables",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/variables?page=<>&per_page=<>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"variables"
											],
											"query": [
												{
													"key": "page",
													"value": "<>",
													"description": "Current page number"
												},
												{
													"key": "per_page",
													"value": "<>",
													"description": "Number of items per page"
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get projects  variables"
									},
									"response": []
								},
								{
									"name": "Delete Projects  Variables Key",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/projects/:id/variables/:key",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"projects",
												":id",
												"variables",
												":key"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "key",
													"value": "<get>",
													"type": "string",
													"description": "The key of the variable"
												}
											]
										},
										"description": "Delete an existing variable from a project"
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Projects",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Remove a project"
							},
							"response": []
						},
						{
							"name": "Add Projects  (ref Ref )trigger Builds",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/(ref/:ref/)trigger/builds",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"(ref",
										":ref",
										")trigger",
										"builds"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										},
										{
											"key": "ref",
											"value": "<get>",
											"type": "string",
											"description": "The commit sha or name of a branch or tag"
										}
									]
								},
								"description": "Post projects  (ref ref )trigger builds"
							},
							"response": []
						},
						{
							"name": "Add Projects  Archive",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/archive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"archive"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Post projects  archive"
							},
							"response": []
						},
						{
							"name": "Get Projects  Events",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/events?page=<>&per_page=<>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"events"
									],
									"query": [
										{
											"key": "page",
											"value": "<>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<>",
											"description": "Number of items per page"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Get events for a single project"
							},
							"response": []
						},
						{
							"name": "Get Projects  Notification Settings",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/notification_settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"notification_settings"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.12"
							},
							"response": []
						},
						{
							"name": "Add Projects  Pipeline",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/pipeline",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"pipeline"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.14"
							},
							"response": []
						},
						{
							"name": "Delete Projects  Star",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/star",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"star"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Delete projects  star"
							},
							"response": []
						},
						{
							"name": "Add Projects  Statuses Sha",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/statuses/:sha",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"statuses",
										":sha"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										},
										{
											"key": "sha",
											"value": "<get>",
											"type": "string",
											"description": "The commit, branch name, or tag name"
										}
									]
								},
								"description": "Post projects  statuses sha"
							},
							"response": []
						},
						{
							"name": "Add Projects  Unarchive",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/unarchive",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"unarchive"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Post projects  unarchive"
							},
							"response": []
						},
						{
							"name": "Add Projects  Uploads",
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/uploads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"uploads"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Post projects  uploads"
							},
							"response": []
						},
						{
							"name": "Get Projects  Users",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/projects/:id/users?search=<>&page=<>&per_page=<>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"projects",
										":id",
										"users"
									],
									"query": [
										{
											"key": "search",
											"value": "<>",
											"description": "Search for a specific group"
										},
										{
											"key": "page",
											"value": "<>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<>",
											"description": "Number of items per page"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Get the users list of a project"
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Projects",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects?order_by=<>&sort=<>&archived=<get>&visibility=<>&search=<>&page=<>&per_page=<>&simple=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects"
							],
							"query": [
								{
									"key": "order_by",
									"value": "<>",
									"description": "Order by name or path"
								},
								{
									"key": "sort",
									"value": "<>",
									"description": "Sort by asc (ascending) or desc (descending)"
								},
								{
									"key": "archived",
									"value": "<get>",
									"description": "Limit by archived status"
								},
								{
									"key": "visibility",
									"value": "<>",
									"description": "Limit by visibility"
								},
								{
									"key": "search",
									"value": "<>",
									"description": "Search for a specific group"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								},
								{
									"key": "simple",
									"value": "<>",
									"description": "Return only the ID, URL, name, and path of each project"
								}
							]
						},
						"description": "Get a projects list for authenticated user"
					},
					"response": []
				},
				{
					"name": "Get Projects All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/all?order_by=<>&sort=<>&archived=<get>&visibility=<>&search=<>&page=<>&per_page=<>&simple=<>&statistics=<get>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"all"
							],
							"query": [
								{
									"key": "order_by",
									"value": "<>",
									"description": "Order by name or path"
								},
								{
									"key": "sort",
									"value": "<>",
									"description": "Sort by asc (ascending) or desc (descending)"
								},
								{
									"key": "archived",
									"value": "<get>",
									"description": "Limit by archived status"
								},
								{
									"key": "visibility",
									"value": "<>",
									"description": "Limit by visibility"
								},
								{
									"key": "search",
									"value": "<>",
									"description": "Search for a specific group"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								},
								{
									"key": "simple",
									"value": "<>",
									"description": "Return only the ID, URL, name, and path of each project"
								},
								{
									"key": "statistics",
									"value": "<get>",
									"description": "Include project statistics"
								}
							]
						},
						"description": "Get all projects for admin user"
					},
					"response": []
				},
				{
					"name": "Add Projects Fork",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/fork/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"fork",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<get>",
									"type": "string",
									"description": "The ID of a group"
								}
							]
						},
						"description": "Fork new project for the current user or provided namespace."
					},
					"response": []
				},
				{
					"name": "Get Projects Owned",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/owned?order_by=<>&sort=<>&archived=<get>&visibility=<>&search=<>&page=<>&per_page=<>&simple=<>&statistics=<get>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"owned"
							],
							"query": [
								{
									"key": "order_by",
									"value": "<>",
									"description": "Order by name or path"
								},
								{
									"key": "sort",
									"value": "<>",
									"description": "Sort by asc (ascending) or desc (descending)"
								},
								{
									"key": "archived",
									"value": "<get>",
									"description": "Limit by archived status"
								},
								{
									"key": "visibility",
									"value": "<>",
									"description": "Limit by visibility"
								},
								{
									"key": "search",
									"value": "<>",
									"description": "Search for a specific group"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								},
								{
									"key": "simple",
									"value": "<>",
									"description": "Return only the ID, URL, name, and path of each project"
								},
								{
									"key": "statistics",
									"value": "<get>",
									"description": "Include project statistics"
								}
							]
						},
						"description": "Get an owned projects list for authenticated user"
					},
					"response": []
				},
				{
					"name": "Get Projects Search Query",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/search/:query?order_by=<>&sort=<>&page=<>&per_page=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"search",
								":query"
							],
							"query": [
								{
									"key": "order_by",
									"value": "<>",
									"description": "Order by name or path"
								},
								{
									"key": "sort",
									"value": "<>",
									"description": "Sort by asc (ascending) or desc (descending)"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								}
							],
							"variable": [
								{
									"key": "query",
									"value": "<>",
									"type": "string",
									"description": "The project name to be searched"
								}
							]
						},
						"description": "Search for projects the current user has access to"
					},
					"response": []
				},
				{
					"name": "Get Projects Starred",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/starred?order_by=<>&sort=<>&archived=<get>&visibility=<>&search=<>&page=<>&per_page=<>&simple=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"starred"
							],
							"query": [
								{
									"key": "order_by",
									"value": "<>",
									"description": "Order by name or path"
								},
								{
									"key": "sort",
									"value": "<>",
									"description": "Sort by asc (ascending) or desc (descending)"
								},
								{
									"key": "archived",
									"value": "<get>",
									"description": "Limit by archived status"
								},
								{
									"key": "visibility",
									"value": "<>",
									"description": "Limit by visibility"
								},
								{
									"key": "search",
									"value": "<>",
									"description": "Search for a specific group"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								},
								{
									"key": "simple",
									"value": "<>",
									"description": "Return only the ID, URL, name, and path of each project"
								}
							]
						},
						"description": "Gets starred project for the authenticated user"
					},
					"response": []
				},
				{
					"name": "Add Projects User User",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/user/:user_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"user",
								":user_id"
							],
							"variable": [
								{
									"key": "user_id",
									"value": "<>",
									"type": "string",
									"description": "The user ID of the access requester"
								}
							]
						},
						"description": "Create new project for a specified user. Only available to admin users."
					},
					"response": []
				},
				{
					"name": "Get Projects Visible",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/projects/visible?order_by=<>&sort=<>&archived=<get>&visibility=<>&search=<>&page=<>&per_page=<>&simple=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"projects",
								"visible"
							],
							"query": [
								{
									"key": "order_by",
									"value": "<>",
									"description": "Order by name or path"
								},
								{
									"key": "sort",
									"value": "<>",
									"description": "Sort by asc (ascending) or desc (descending)"
								},
								{
									"key": "archived",
									"value": "<get>",
									"description": "Limit by archived status"
								},
								{
									"key": "visibility",
									"value": "<>",
									"description": "Limit by visibility"
								},
								{
									"key": "search",
									"value": "<>",
									"description": "Search for a specific group"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								},
								{
									"key": "simple",
									"value": "<>",
									"description": "Return only the ID, URL, name, and path of each project"
								}
							]
						},
						"description": "Get a list of visible projects for authenticated user"
					},
					"response": []
				}
			]
		},
		{
			"name": "runners",
			"item": [
				{
					"name": "Get Runners",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/runners?scope=<>&page=<>&per_page=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"runners"
							],
							"query": [
								{
									"key": "scope",
									"value": "<>",
									"description": "The scope of builds to show"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "Get runners available for user"
					},
					"response": []
				},
				{
					"name": "Get Runners All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/runners/all?scope=<>&page=<>&per_page=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"runners",
								"all"
							],
							"query": [
								{
									"key": "scope",
									"value": "<>",
									"description": "The scope of builds to show"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "Get all runners - shared and specific"
					},
					"response": []
				},
				{
					"name": "Delete Runners",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/runners/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"runners",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<get>",
									"type": "string",
									"description": "The ID of a group"
								}
							]
						},
						"description": "Remove a runner"
					},
					"response": []
				}
			]
		},
		{
			"name": "sidekiq",
			"item": [
				{
					"name": "Get Sekiq Compound Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sidekiq/compound_metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sidekiq",
								"compound_metrics"
							]
						},
						"description": "Get the Sidekiq Compound metrics. Includes queue, process, and job statistics"
					},
					"response": []
				},
				{
					"name": "Get Sekiq Job Stats",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sidekiq/job_stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sidekiq",
								"job_stats"
							]
						},
						"description": "Get the Sidekiq job statistics"
					},
					"response": []
				},
				{
					"name": "Get Sekiq Process Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sidekiq/process_metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sidekiq",
								"process_metrics"
							]
						},
						"description": "Get the Sidekiq process metrics"
					},
					"response": []
				},
				{
					"name": "Get Sekiq Queue Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/sidekiq/queue_metrics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"sidekiq",
								"queue_metrics"
							]
						},
						"description": "Get the Sidekiq queue metrics"
					},
					"response": []
				}
			]
		},
		{
			"name": "snippets",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Delete Snippets",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snippets/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snippets",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.15."
							},
							"response": []
						},
						{
							"name": "Get Snippets  Raw",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/snippets/:id/raw",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"snippets",
										":id",
										"raw"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.15."
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Snippets",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snippets?page=<>&per_page=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snippets"
							],
							"query": [
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "This feature was introduced in GitLab 8.15."
					},
					"response": []
				},
				{
					"name": "Get Snippets Public",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/snippets/public?page=<>&per_page=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"snippets",
								"public"
							],
							"query": [
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "This feature was introduced in GitLab 8.15."
					},
					"response": []
				}
			]
		},
		{
			"name": "templates",
			"item": [
				{
					"name": "dockerfiles",
					"item": [
						{
							"name": "Get Templates Dockerfiles",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/dockerfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"dockerfiles"
									]
								},
								"description": "This feature was introduced in GitLab 8.15."
							},
							"response": []
						},
						{
							"name": "Get Templates Dockerfiles Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/dockerfiles/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"dockerfiles",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<get>",
											"type": "string",
											"description": "The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.15."
							},
							"response": []
						}
					]
				},
				{
					"name": "gitignores",
					"item": [
						{
							"name": "Get Templates Gitignores",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/gitignores",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"gitignores"
									]
								},
								"description": "This feature was introduced in GitLab 8.8."
							},
							"response": []
						},
						{
							"name": "Get Templates Gitignores Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/gitignores/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"gitignores",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<get>",
											"type": "string",
											"description": "The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.8."
							},
							"response": []
						}
					]
				},
				{
					"name": "gitlab ci ymls",
					"item": [
						{
							"name": "Get Templates Gitlab Ci Ymls",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/gitlab_ci_ymls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"gitlab_ci_ymls"
									]
								},
								"description": "This feature was introduced in GitLab 8.9."
							},
							"response": []
						},
						{
							"name": "Get Templates Gitlab Ci Ymls Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/gitlab_ci_ymls/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"gitlab_ci_ymls",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<get>",
											"type": "string",
											"description": "The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.9."
							},
							"response": []
						}
					]
				},
				{
					"name": "licenses",
					"item": [
						{
							"name": "Get Templates Licenses",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/licenses?popular=<get>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"licenses"
									],
									"query": [
										{
											"key": "popular",
											"value": "<get>",
											"description": "If passed, returns only popular licenses"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.7."
							},
							"response": []
						},
						{
							"name": "Get Templates Licenses Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/templates/licenses/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"templates",
										"licenses",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<get>",
											"type": "string",
											"description": "The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.7."
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "todos",
			"item": [
				{
					"name": "Delete Todos",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos"
							]
						},
						"description": "Mark all todos as done"
					},
					"response": []
				},
				{
					"name": "Delete Todos",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/todos/:id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"todos",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "<get>",
									"type": "string",
									"description": "The ID of a group"
								}
							]
						},
						"description": "Mark a todo as done"
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "emails",
					"item": [
						{
							"name": "Get User Emails",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/emails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails"
									]
								},
								"description": "Get the currently authenticated user's email addresses"
							},
							"response": []
						},
						{
							"name": "Delete User Emails Email",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/emails/:email_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"emails",
										":email_id"
									],
									"variable": [
										{
											"key": "email_id",
											"value": "<>",
											"type": "string",
											"description": "The ID of the email"
										}
									]
								},
								"description": "Delete an email address from the currently authenticated user"
							},
							"response": []
						}
					]
				},
				{
					"name": "keys",
					"item": [
						{
							"name": "Get User Keys",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys"
									]
								},
								"description": "Get the currently authenticated user's SSH keys"
							},
							"response": []
						},
						{
							"name": "Delete User Keys Key",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/keys/:key_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"keys",
										":key_id"
									],
									"variable": [
										{
											"key": "key_id",
											"value": "<>",
											"type": "string",
											"description": "The ID of the deploy key"
										}
									]
								},
								"description": "Delete an SSH key from the currently authenticated user"
							},
							"response": []
						}
					]
				},
				{
					"name": "Get User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "Get the currently authenticated user"
					},
					"response": []
				}
			]
		},
		{
			"name": "users",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "emails",
							"item": [
								{
									"name": "Get Users  Emails",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id/emails",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"emails"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get the emails addresses of a specified user. Available only for admins."
									},
									"response": []
								},
								{
									"name": "Delete Users  Emails Email",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id/emails/:email_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"emails",
												":email_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "email_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of the email"
												}
											]
										},
										"description": "Delete an email address of a specified user. Available only for admins."
									},
									"response": []
								}
							]
						},
						{
							"name": "keys",
							"item": [
								{
									"name": "Get Users  Keys",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id/keys",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"keys"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												}
											]
										},
										"description": "Get the SSH keys of a specified user. Available only for admins."
									},
									"response": []
								},
								{
									"name": "Delete Users  Keys Key",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/users/:id/keys/:key_id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"users",
												":id",
												"keys",
												":key_id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<get>",
													"type": "string",
													"description": "The ID of a group"
												},
												{
													"key": "key_id",
													"value": "<>",
													"type": "string",
													"description": "The ID of the deploy key"
												}
											]
										},
										"description": "Delete an existing SSH key from a specified user. Available only for admins."
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Users",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Delete a user. Available only for admins."
							},
							"response": []
						},
						{
							"name": "Put Users  Block",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/block",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"block"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Block a user. Available only for admins."
							},
							"response": []
						},
						{
							"name": "Get Users  Events",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/events?page=<>&per_page=<>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"events"
									],
									"query": [
										{
											"key": "page",
											"value": "<>",
											"description": "Current page number"
										},
										{
											"key": "per_page",
											"value": "<>",
											"description": "Number of items per page"
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.13."
							},
							"response": []
						},
						{
							"name": "Put Users  Unblock",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/users/:id/unblock",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"users",
										":id",
										"unblock"
									],
									"variable": [
										{
											"key": "id",
											"value": "<get>",
											"type": "string",
											"description": "The ID of a group"
										}
									]
								},
								"description": "Unblock a user. Available only for admins."
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/users?username=<get>&search=<>&active=<get>&external=<get>&blocked=<>&page=<>&per_page=<>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "username",
									"value": "<get>",
									"description": "Get a single user with a specific username"
								},
								{
									"key": "search",
									"value": "<>",
									"description": "Search for a specific group"
								},
								{
									"key": "active",
									"value": "<get>",
									"description": "Filters only active users"
								},
								{
									"key": "external",
									"value": "<get>",
									"description": "Filters only external users"
								},
								{
									"key": "blocked",
									"value": "<>",
									"description": "Filters only blocked users"
								},
								{
									"key": "page",
									"value": "<>",
									"description": "Current page number"
								},
								{
									"key": "per_page",
									"value": "<>",
									"description": "Number of items per page"
								}
							]
						},
						"description": "Get the list of users"
					},
					"response": []
				}
			]
		},
		{
			"name": "v3",
			"item": [
				{
					"name": "dockerfiles",
					"item": [
						{
							"name": "Get the list of the available template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/dockerfiles",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"dockerfiles"
									]
								},
								"description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": []
						},
						{
							"name": "Get the text for a specific template present in local filesystem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/dockerfiles/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"dockerfiles",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<get>",
											"type": "string",
											"description": "The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.15. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": []
						}
					]
				},
				{
					"name": "gitignores",
					"item": [
						{
							"name": "Get the list of the available template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitignores",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitignores"
									]
								},
								"description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": []
						},
						{
							"name": "Get the text for a specific template present in local filesystem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitignores/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitignores",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<get>",
											"type": "string",
											"description": "The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.8. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": []
						}
					]
				},
				{
					"name": "gitlab ci ymls",
					"item": [
						{
							"name": "Get the list of the available template",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitlab_ci_ymls",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitlab_ci_ymls"
									]
								},
								"description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": []
						},
						{
							"name": "Get the text for a specific template present in local filesystem",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v3/gitlab_ci_ymls/:name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v3",
										"gitlab_ci_ymls",
										":name"
									],
									"variable": [
										{
											"key": "name",
											"value": "<get>",
											"type": "string",
											"description": "The name of the template"
										}
									]
								},
								"description": "This feature was introduced in GitLab 8.9. This endpoint is deprecated and will be removed in GitLab 9.0."
							},
							"response": []
						}
					]
				},
				{
					"name": "Get the current application settings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/application/settings",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"application",
								"settings"
							]
						},
						"description": "Get the current application settings"
					},
					"response": []
				},
				{
					"name": "Validation of .gitlab-ci.yml content",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/ci/lint",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"ci",
								"lint"
							]
						},
						"description": "Validation of .gitlab-ci.yml content"
					},
					"response": []
				},
				{
					"name": "get V3Deploy Keys",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/v3/deploy_keys",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"v3",
								"deploy_keys"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Application Settings",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/application/settings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"application",
						"settings"
					]
				},
				"description": "Get the current application settings"
			},
			"response": []
		},
		{
			"name": "Add Ci Lint",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/ci/lint",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"ci",
						"lint"
					]
				},
				"description": "Validation of .gitlab-ci.yml content"
			},
			"response": []
		},
		{
			"name": "Get Deploy Keys",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/deploy_keys",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"deploy_keys"
					]
				},
				"description": "Get deploy keys"
			},
			"response": []
		},
		{
			"name": "Get Issues",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/issues?state=<get>&labels=<get>&milestone=<object>&order_by=<>&sort=<>&page=<>&per_page=<>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"issues"
					],
					"query": [
						{
							"key": "state",
							"value": "<get>",
							"description": "Return opened, closed, or all issues"
						},
						{
							"key": "labels",
							"value": "<get>",
							"description": "Comma-separated list of label names"
						},
						{
							"key": "milestone",
							"value": "<object>",
							"description": "Return issues for a specific milestone"
						},
						{
							"key": "order_by",
							"value": "<>",
							"description": "Order by name or path"
						},
						{
							"key": "sort",
							"value": "<>",
							"description": "Sort by asc (ascending) or desc (descending)"
						},
						{
							"key": "page",
							"value": "<>",
							"description": "Current page number"
						},
						{
							"key": "per_page",
							"value": "<>",
							"description": "Number of items per page"
						}
					]
				},
				"description": "Get currently authenticated user's issues"
			},
			"response": []
		},
		{
			"name": "Get Keys",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/keys/:id",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"keys",
						":id"
					],
					"variable": [
						{
							"key": "id",
							"value": "<get>",
							"type": "string",
							"description": "The ID of a group"
						}
					]
				},
				"description": "Get single ssh key by id. Only available to admin users"
			},
			"response": []
		},
		{
			"name": "Get Namespaces",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/namespaces?search=<>&page=<>&per_page=<>",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"namespaces"
					],
					"query": [
						{
							"key": "search",
							"value": "<>",
							"description": "Search for a specific group"
						},
						{
							"key": "page",
							"value": "<>",
							"description": "Current page number"
						},
						{
							"key": "per_page",
							"value": "<>",
							"description": "Number of items per page"
						}
					]
				},
				"description": "Get a namespaces list"
			},
			"response": []
		},
		{
			"name": "Get Notification Settings",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/notification_settings",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notification_settings"
					]
				},
				"description": "This feature was introduced in GitLab 8.12"
			},
			"response": []
		},
		{
			"name": "Add Session",
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/session",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"session"
					]
				},
				"description": "Login to get token"
			},
			"response": []
		},
		{
			"name": "Get Version",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/version",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"version"
					]
				},
				"description": "This feature was introduced in GitLab 8.13."
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "httpsgitlab.com/api",
			"type": "string"
		}
	]
}